
    <link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500">
    <p>
    <div id="locationField" class='input-group'>
      <input id="autocomplete" placeholder="Enter your address" name='address'
             onFocus="geolocate()" type="text" class='form-control' value="<%=locals[:address]%>"</input>
    </div>
    <div class="input-group">
     <input type="hidden" id="lat" name='latitude' class='form-control'>
     <input type="hidden" id="lng" name='longitude' class='form-control'>
    </div>
    </p>
    <script>
      // This example displays an address form, using the autocomplete feature
      // of the Google Places API to help users fill in the information.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }

      function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();


        var lat = place.geometry.location.lat();
        document.getElementById("lat").value = lat;

        var lng = place.geometry.location.lng();
        document.getElementById("lng").value = lng;

        // put in hidden input and save to server 

        console.log("lat is "+lat);
        console.log("lng is "+lng);

        }

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCaLO_D8ackXu9mEzXvuvZdPUWRdxdp6zI&libraries=places&callback=initAutocomplete"
        async defer></script>